[
    {
        "id": "e6fc873145b0a448",
        "type": "tab",
        "label": "loader",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "9aa5b9070aee3f3e",
        "type": "function",
        "z": "e6fc873145b0a448",
        "name": "Prepare MongoDB Insert",
        "func": "// Extract the medication and amount from the input message\nvar medication = msg.payload.medication;\nvar amount = msg.payload.amount;\nvar level = msg.payload.level;\n\n//node.warn('Extracted Medication: ' + medication);\n//node.warn('Extracted Amount: ' + amount);\n//node.warn('Extracted Amount: ' + level);\n\n// Create a new document to insert into the MongoDB collection\nvar newDocument = {\n    Medication: medication,\n    Amount: amount,\n    Level: level\n};\n\nnode.warn('New Document: ' + JSON.stringify(newDocument));\n\n// Set the payload to the new document\nmsg.payload = newDocument;\n\n// Set the MongoDB operation\nmsg.operation = \"insert\";\nnode.warn('Operation: ' + msg.operation);\n\nreturn msg;\n",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 670,
        "y": 800,
        "wires": [
            [
                "fdd29b27467bf404",
                "6e611c535a045cfb"
            ]
        ]
    },
    {
        "id": "6e611c535a045cfb",
        "type": "mongodb-aleph-out",
        "z": "e6fc873145b0a448",
        "mongodb": "8efbd4578f8ecf11",
        "name": "Load Meds to MongoDB",
        "collection": "Medications",
        "payonly": true,
        "upsert": false,
        "multi": false,
        "operation": "insert",
        "x": 950,
        "y": 820,
        "wires": [
            [
                "aa6f4a563854c447",
                "64dd9fdb495bb68a"
            ]
        ]
    },
    {
        "id": "64dd9fdb495bb68a",
        "type": "debug",
        "z": "e6fc873145b0a448",
        "name": "Load Confirmation",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 1190,
        "y": 780,
        "wires": []
    },
    {
        "id": "fdd29b27467bf404",
        "type": "debug",
        "z": "e6fc873145b0a448",
        "name": "Loader Output",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 920,
        "y": 780,
        "wires": []
    },
    {
        "id": "d4ce18e4ddae81b5",
        "type": "ui_numeric",
        "z": "e6fc873145b0a448",
        "name": "Amount",
        "label": "Amount",
        "tooltip": "",
        "group": "d8b6d191.994608",
        "order": 1,
        "width": 0,
        "height": 0,
        "wrap": false,
        "passthru": true,
        "topic": "amount",
        "topicType": "msg",
        "format": "{{value}}",
        "min": 0,
        "max": "10",
        "step": 1,
        "className": "",
        "x": 100,
        "y": 420,
        "wires": [
            [
                "43c651aeb5a1601a"
            ]
        ]
    },
    {
        "id": "78f9921f53c89a6f",
        "type": "ui_dropdown",
        "z": "e6fc873145b0a448",
        "name": "Medication Type",
        "label": "Medication Type",
        "tooltip": "",
        "place": "Select option",
        "group": "d8b6d191.994608",
        "order": 2,
        "width": 0,
        "height": 0,
        "passthru": true,
        "multiple": false,
        "options": [
            {
                "label": "Panadol",
                "value": "Panadol",
                "type": "str"
            },
            {
                "label": "Fentanyl",
                "value": "Fentanyl",
                "type": "str"
            },
            {
                "label": "Morphine",
                "value": "Morphine",
                "type": "str"
            },
            {
                "label": "OxyContin",
                "value": "OxyContin",
                "type": "str"
            },
            {
                "label": "Methadone",
                "value": "Methadone",
                "type": "str"
            },
            {
                "label": "Adderall",
                "value": "Adderall",
                "type": "str"
            },
            {
                "label": "Paracetamol",
                "value": "Paracetamol",
                "type": "str"
            },
            {
                "label": "Ibuprofen",
                "value": "Ibuprofen",
                "type": "str"
            },
            {
                "label": "Loratadine",
                "value": "Loratadine",
                "type": "str"
            },
            {
                "label": "Ranitidine",
                "value": "Ranitidine",
                "type": "str"
            },
            {
                "label": "Vitamin C",
                "value": "Vitamin C",
                "type": "str"
            }
        ],
        "payload": "",
        "topic": "medication",
        "topicType": "msg",
        "className": "",
        "x": 120,
        "y": 460,
        "wires": [
            [
                "43c651aeb5a1601a"
            ]
        ]
    },
    {
        "id": "43c651aeb5a1601a",
        "type": "function",
        "z": "e6fc873145b0a448",
        "name": "aggregate Input",
        "func": "if (typeof msg.payload === 'number' && Number.isInteger(msg.payload)) {\n    // If payload is an integer, set 'amount' to its value\n    flow.set('amount', msg.payload);\n    node.warn(\"Amount received and stored in flow context\");\n} else if (typeof msg.payload === 'string') {\n    var medicationName = msg.payload; // Extract medication name from the string\n    flow.set('medication', medicationName);\n    node.warn(\"Medication received and stored in flow context: \" + medicationName);\n} else {\n    // Log if payload does not contain expected properties\n    node.warn(\"Payload does not contain 'amount' or 'medication'. Payload: \" + JSON.stringify(msg.payload));\n}\n\n// Retrieve both amount and medication from global context\nvar amount = flow.get('amount');\nvar medication = flow.get('medication');\n\nnode.warn(\"Retrieved amount from flow context: \" + amount);\nnode.warn(\"Retrieved medication from flow context: \" + medication);\n\n// Check if both values are available\nif (amount !== undefined && medication !== undefined) {\n    // Both values are available, build the object\n    msg.payload = {\n        amount: amount,\n        medication: medication\n    };\n    node.warn(\"Both values are available, proceeding with msg: \" + JSON.stringify(msg.payload));\n\n    // Optionally, you can decide not to clear the stored values if you need them later\n    // global.set('amount', undefined);\n    // global.set('medication', undefined);\n\n    return msg;\n} else {\n    // If either amount or medication is not yet received, wait for it\n    node.warn(\"Waiting for both values to be received.\");\n    return null;\n}\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 340,
        "y": 440,
        "wires": [
            []
        ]
    },
    {
        "id": "eee4bd6ac70542d2",
        "type": "ui_button",
        "z": "e6fc873145b0a448",
        "name": "Confirm",
        "group": "d8b6d191.994608",
        "order": 3,
        "width": 0,
        "height": 0,
        "passthru": false,
        "label": "Confirm",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "icon": "",
        "payload": "",
        "payloadType": "str",
        "topic": "",
        "topicType": "str",
        "x": 100,
        "y": 500,
        "wires": [
            [
                "406acdd260635eb1"
            ]
        ]
    },
    {
        "id": "c571ddb1a2d7cee9",
        "type": "function",
        "z": "e6fc873145b0a448",
        "name": "format input, assign medication clearance",
        "func": "var medication = flow.get('medication');\n\n// Define the list of medications with their security clearances\nvar medicationsList = {\n    \"Fentanyl\": \"High\",\n    \"Morphine\": \"High\",\n    \"OxyContin\": \"High\",\n    \"Methadone\": \"High\",\n    \"Adderall\": \"High\",\n    \"Panadol\": \"Low\", // \n    \"Ibuprofen\": \"Low\",\n    \"Loratadine\": \"Low\",\n    \"Ranitidine\": \"Low\",\n    \"Vitamin C\": \"Low\"\n};\n\n\nvar data = {\n    medication: medication,\n    level: medicationsList[medication], // Add the 'level' field based on medication\n    location: msg.payload\n};\n\n\nreturn [\n    { ...msg },  // Original message\n    { payload: data } // New message with the modified value\n];\n",
        "outputs": 2,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 280,
        "y": 920,
        "wires": [
            [
                "ece2dd1f6e9e23cd"
            ],
            [
                "9aa5b9070aee3f3e"
            ]
        ]
    },
    {
        "id": "406acdd260635eb1",
        "type": "function",
        "z": "e6fc873145b0a448",
        "name": "ask which locations are busy",
        "func": "msg.payload = {};\nmsg.projection = { \"_location\": 1, \"_id\": 0 };\n\n// Set the MongoDB operation\nmsg.operation = \"find\";\nnode.warn('Operation: ' + msg.operation);\n\nreturn msg;\n\n",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 380,
        "y": 500,
        "wires": [
            [
                "44150b37bbe931d2"
            ]
        ]
    },
    {
        "id": "f9b0adcab224b4ce",
        "type": "function",
        "z": "e6fc873145b0a448",
        "name": "decide where to put meds",
        "func": "// Retrieve the existing locations from the MongoDB response\nlet existingLocations = msg.payload.filter(loc => loc._location).map(loc => loc._location);\nlet existingLocationsSet = new Set(existingLocations);\n\n// Retrieve the amount from flow context\nlet amount = flow.get('amount');\n\n// Define the range limits\nconst xRange = 1000;\nconst yRange = 1000;\n\n// Determine locations for the boxes\nlet boxLocations = [];\n\nouterLoop:\nfor (let x = 1; x <= xRange; x++) {\n    for (let y = 1; y <= yRange; y++) {\n        let location = `${x}, ${y}`;\n        if (!existingLocationsSet.has(location)) {\n            boxLocations.push(location);\n            if (boxLocations.length >= amount) {\n                break outerLoop;\n            }\n        }\n    }\n}\n\n// Set the box locations in the message payload\nflow.set('locations', boxLocations);\nmsg.payload = boxLocations;\nreturn msg;\n",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 370,
        "y": 600,
        "wires": [
            [
                "644d0c3d6e0e33ed"
            ]
        ]
    },
    {
        "id": "d135cb702aa1e498",
        "type": "mqtt in",
        "z": "e6fc873145b0a448",
        "name": "",
        "topic": "testTopic",
        "qos": "2",
        "datatype": "auto-detect",
        "broker": "ce684d0833c30503",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 80,
        "y": 680,
        "wires": [
            [
                "9bd8de9b19817b38"
            ]
        ]
    },
    {
        "id": "a404e5f2b96a8418",
        "type": "mqtt out",
        "z": "e6fc873145b0a448",
        "name": "",
        "topic": "testTopic",
        "qos": "",
        "retain": "",
        "respTopic": "",
        "contentType": "",
        "userProps": "",
        "correl": "",
        "expiry": "",
        "broker": "ce684d0833c30503",
        "x": 880,
        "y": 720,
        "wires": []
    },
    {
        "id": "a96f4f422554ace5",
        "type": "comment",
        "z": "e6fc873145b0a448",
        "name": "important!",
        "info": "we store input into context variables, \nso we don't need to connect this function to anything",
        "x": 480,
        "y": 440,
        "wires": []
    },
    {
        "id": "98e9b415f5570edb",
        "type": "ui_text",
        "z": "e6fc873145b0a448",
        "group": "7bec1ed418fad541",
        "order": 8,
        "width": 0,
        "height": 0,
        "name": "",
        "label": "Pharmacist menu description",
        "format": "{{msg.payload}}",
        "layout": "row-spread",
        "className": "",
        "style": false,
        "font": "",
        "fontSize": 16,
        "color": "#000000",
        "x": 160,
        "y": 120,
        "wires": []
    },
    {
        "id": "55923586.9795cc",
        "type": "ui_template",
        "z": "e6fc873145b0a448",
        "group": "bd2027dddef41de4",
        "name": "pharmcist load->",
        "order": 1,
        "width": 0,
        "height": 0,
        "format": "<button class=\"md-raised nr-dashboard-form-button md-button md-ink-ripple\" onclick=\"window.location.href='http://34.151.86.177/ui/#!/1?socketid=RAlCQ1FdffExpqvqAAEt';\" style=\"height:44px;line-height:44px\">Load Medications</button>",
        "storeOutMessages": true,
        "fwdInMessages": true,
        "resendOnRefresh": true,
        "templateScope": "local",
        "className": "",
        "x": 490,
        "y": 120,
        "wires": [
            []
        ]
    },
    {
        "id": "03aaf7c3e9b0d09f",
        "type": "comment",
        "z": "e6fc873145b0a448",
        "name": "Pharmacist loads meds gui",
        "info": "",
        "x": 150,
        "y": 340,
        "wires": []
    },
    {
        "id": "48f86bfa37b9b926",
        "type": "comment",
        "z": "e6fc873145b0a448",
        "name": "Pharmacist main menu gui",
        "info": "",
        "x": 150,
        "y": 80,
        "wires": []
    },
    {
        "id": "a95860137df9ad52",
        "type": "ui_template",
        "z": "e6fc873145b0a448",
        "group": "7bec1ed418fad541",
        "name": "pharmcist load/retrieve form->",
        "order": 2,
        "width": 0,
        "height": 0,
        "format": "<button class=\"md-raised nr-dashboard-form-button md-button md-ink-ripple\" onclick=\"window.location.href='http://34.151.86.177/ui/#!/2?socketid=zBDDOfDknqT46cbtAAFh';\" style=\"height:44px;line-height:44px\">Load Medications</button>\n",
        "storeOutMessages": true,
        "fwdInMessages": true,
        "resendOnRefresh": true,
        "templateScope": "local",
        "className": "",
        "x": 170,
        "y": 160,
        "wires": [
            []
        ]
    },
    {
        "id": "7eff2d78e90c1a67",
        "type": "comment",
        "z": "e6fc873145b0a448",
        "name": "load or retrieve?",
        "info": "",
        "x": 480,
        "y": 80,
        "wires": []
    },
    {
        "id": "024709b987b8656c",
        "type": "ui_template",
        "z": "e6fc873145b0a448",
        "group": "bd2027dddef41de4",
        "name": "pharmcist retrieve->",
        "order": 1,
        "width": 0,
        "height": 0,
        "format": "<button class=\"md-raised nr-dashboard-form-button md-button md-ink-ripple\" onclick=\"window.location.href='http://34.151.86.177/ui/#!/5?socketid=sUndJgTW0xQ1MnQ0AAG7';\" style=\"height:44px;line-height:44px\">Retrieve Medications</button>",
        "storeOutMessages": true,
        "fwdInMessages": true,
        "resendOnRefresh": true,
        "templateScope": "local",
        "className": "",
        "x": 500,
        "y": 160,
        "wires": [
            []
        ]
    },
    {
        "id": "faa0558c18aa4097",
        "type": "ui_template",
        "z": "e6fc873145b0a448",
        "group": "7bec1ed418fad541",
        "name": "pharmcist browse meds->",
        "order": 3,
        "width": 0,
        "height": 0,
        "format": "<button class=\"md-raised nr-dashboard-form-button md-button md-ink-ripple\" onclick=\"window.location.href='http://34.151.86.177/ui/#!/1?socketid=RAlCQ1FdffExpqvqAAEt';\" style=\"height:44px;line-height:44px\">Browse inventory</button>",
        "storeOutMessages": true,
        "fwdInMessages": true,
        "resendOnRefresh": true,
        "templateScope": "local",
        "className": "",
        "x": 150,
        "y": 200,
        "wires": [
            []
        ]
    },
    {
        "id": "122d15e7c4bb5c3c",
        "type": "ui_template",
        "z": "e6fc873145b0a448",
        "group": "7bec1ed418fad541",
        "name": "pharmcist view history->",
        "order": 4,
        "width": 0,
        "height": 0,
        "format": "<button class=\"md-raised nr-dashboard-form-button md-button md-ink-ripple\" onclick=\"window.location.href='http://34.151.86.177/ui/#!/1?socketid=RAlCQ1FdffExpqvqAAEt';\" style=\"height:44px;line-height:44px\">View history log</button>",
        "storeOutMessages": true,
        "fwdInMessages": true,
        "resendOnRefresh": true,
        "templateScope": "local",
        "className": "",
        "x": 150,
        "y": 240,
        "wires": [
            []
        ]
    },
    {
        "id": "44150b37bbe931d2",
        "type": "mongodb-aleph-in",
        "z": "e6fc873145b0a448",
        "mongodb": "8efbd4578f8ecf11",
        "name": "get locations",
        "collection": "Medications",
        "operation": "find",
        "x": 790,
        "y": 500,
        "wires": [
            [
                "f9b0adcab224b4ce"
            ]
        ]
    },
    {
        "id": "644d0c3d6e0e33ed",
        "type": "loop",
        "z": "e6fc873145b0a448",
        "name": "iterate through boxes",
        "kind": "enum",
        "count": "",
        "initial": "1",
        "step": "1",
        "condition": "",
        "conditionType": "js",
        "when": "before",
        "enumeration": "payload",
        "enumerationType": "msg",
        "limit": "",
        "loopPayload": "loop-val",
        "finalPayload": "final-count",
        "x": 660,
        "y": 600,
        "wires": [
            [],
            [
                "67861dcf62ae051e"
            ]
        ]
    },
    {
        "id": "67861dcf62ae051e",
        "type": "function",
        "z": "e6fc873145b0a448",
        "name": "send coordinates to the robot",
        "func": "// Extract the value content from the message object\nlet value = msg.payload;\n\n// Remove any commas and spaces from the value\nvalue = value.replace(/[\\s,]/g, '');\n\n// Ensure the value is converted to a string and prepend \"0\"\nlet newValue = \"0\" + value;\n\n// Output an array containing both messages\nreturn [\n    { ...msg },  // Original message\n    { payload: newValue } // New message with the modified value\n];\n\n\n// Extract the value content from the message object\n//let value = msg.loop.value;\n\n// Construct two separate messages\n//let message1 = { ...msg }; // Original message\n//let message2 = { payload: value }; // Message containing the extracted value content\n\n// Output an array containing both messages\n//return [message1, message2];",
        "outputs": 2,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 620,
        "y": 720,
        "wires": [
            [
                "644d0c3d6e0e33ed"
            ],
            [
                "a404e5f2b96a8418"
            ]
        ]
    },
    {
        "id": "ccc0e36a1961c0c9",
        "type": "ui_text",
        "z": "e6fc873145b0a448",
        "group": "61150425cb319fef",
        "order": 1,
        "width": 0,
        "height": 0,
        "name": "",
        "label": "Medications have been successfully loaded",
        "format": "{{msg.payload}}",
        "layout": "row-spread",
        "className": "",
        "style": false,
        "font": "",
        "fontSize": 16,
        "color": "#000000",
        "x": 890,
        "y": 120,
        "wires": []
    },
    {
        "id": "741206cc7d66160a",
        "type": "ui_template",
        "z": "e6fc873145b0a448",
        "group": "61150425cb319fef",
        "name": "Pharmacist menu->",
        "order": 3,
        "width": 0,
        "height": 0,
        "format": "<button class=\"md-raised nr-dashboard-form-button md-button md-ink-ripple\" onclick=\"window.location.href='http://34.151.86.177/ui/#!/0?socketid=lgx8S6uDQG5pfnQSAAGh';\" style=\"height:44px;line-height:44px\">back to the main menu</button>",
        "storeOutMessages": true,
        "fwdInMessages": true,
        "resendOnRefresh": true,
        "templateScope": "local",
        "className": "",
        "x": 810,
        "y": 160,
        "wires": [
            []
        ]
    },
    {
        "id": "e32942dc5bf38017",
        "type": "comment",
        "z": "e6fc873145b0a448",
        "name": "Pharmacist loaded meds confirmation",
        "info": "Medications loaded",
        "x": 870,
        "y": 80,
        "wires": []
    },
    {
        "id": "4ec140838b7a0806",
        "type": "ui_ui_control",
        "z": "e6fc873145b0a448",
        "name": "",
        "events": "all",
        "x": 1340,
        "y": 820,
        "wires": [
            []
        ]
    },
    {
        "id": "aa6f4a563854c447",
        "type": "change",
        "z": "e6fc873145b0a448",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "{\"tab\":\"Pharmacist loaded meds confirmation\"}",
                "tot": "json"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1180,
        "y": 820,
        "wires": [
            [
                "4ec140838b7a0806"
            ]
        ]
    },
    {
        "id": "5debc5ce4b46ce5c",
        "type": "ui_text",
        "z": "e6fc873145b0a448",
        "group": "d8b6d191.994608",
        "order": 3,
        "width": 0,
        "height": 0,
        "name": "",
        "label": "Load Medications (Pharmacist)",
        "format": "{{msg.payload}}",
        "layout": "row-spread",
        "className": "",
        "style": false,
        "font": "",
        "fontSize": 16,
        "color": "#000000",
        "x": 170,
        "y": 380,
        "wires": []
    },
    {
        "id": "ece2dd1f6e9e23cd",
        "type": "loop",
        "z": "e6fc873145b0a448",
        "name": "iterate through coordinates",
        "kind": "enum",
        "count": "",
        "initial": "1",
        "step": "1",
        "condition": "",
        "conditionType": "js",
        "when": "before",
        "enumeration": "payload",
        "enumerationType": "msg",
        "limit": "",
        "loopPayload": "loop-val",
        "finalPayload": "final-count",
        "x": 340,
        "y": 800,
        "wires": [
            [],
            [
                "c571ddb1a2d7cee9"
            ]
        ]
    },
    {
        "id": "9bd8de9b19817b38",
        "type": "function",
        "z": "e6fc873145b0a448",
        "name": "function 9",
        "func": "// Get the current time\nvar currentTime = new Date().getTime();\n\n// Get the last processed time from the flow context\nvar lastProcessedTime = flow.get('lastProcessedTime') || 0;\n\n// Calculate the difference in seconds\nvar timeDifference = (currentTime - lastProcessedTime) / 1000;\n\n// Only proceed if at least 30 seconds have passed\nif (timeDifference >= 30) {\n    // Update the last processed time in the flow context\n    flow.set('lastProcessedTime', currentTime);\n\n    // Proceed with the message\n    msg.payload = flow.get('locations')\n    return msg;\n}\n\n// If less than 30 seconds have passed, do not proceed\nreturn null;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 220,
        "y": 740,
        "wires": [
            [
                "ece2dd1f6e9e23cd"
            ]
        ]
    },
    {
        "id": "a74ae124225470a8",
        "type": "debug",
        "z": "e6fc873145b0a448",
        "name": "debug 11",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 650,
        "y": 900,
        "wires": []
    },
    {
        "id": "8efbd4578f8ecf11",
        "type": "mongodb-aleph-config",
        "hostname": "Nodered:LQmpKU4C0DX9cVay@cluster0.1cnydcd.mongodb.net",
        "topology": "dnscluster",
        "connectOptions": "",
        "port": "27017",
        "db": "ASRS",
        "name": ""
    },
    {
        "id": "d8b6d191.994608",
        "type": "ui_group",
        "name": "load menu",
        "tab": "91da677bce3bf414",
        "order": 2,
        "disp": true,
        "width": "6",
        "collapse": false,
        "className": ""
    },
    {
        "id": "ce684d0833c30503",
        "type": "mqtt-broker",
        "name": "HiveMQ Artyom's ASRS broker",
        "broker": "06ea4fbd57d348d0931b9543624acafa.s1.eu.hivemq.cloud",
        "port": "8883",
        "tls": "9be72af31adee06c",
        "clientid": "",
        "autoConnect": true,
        "usetls": true,
        "protocolVersion": "4",
        "keepalive": "60",
        "cleansession": true,
        "autoUnsubscribe": true,
        "birthTopic": "",
        "birthQos": "0",
        "birthRetain": "false",
        "birthPayload": "",
        "birthMsg": {},
        "closeTopic": "",
        "closeQos": "0",
        "closeRetain": "false",
        "closePayload": "",
        "closeMsg": {},
        "willTopic": "",
        "willQos": "0",
        "willRetain": "false",
        "willPayload": "",
        "willMsg": {},
        "userProps": "",
        "sessionExpiry": ""
    },
    {
        "id": "7bec1ed418fad541",
        "type": "ui_group",
        "name": "Pharmacist main menu",
        "tab": "57b8334d92a7b6b7",
        "order": 1,
        "disp": true,
        "width": "6",
        "collapse": false,
        "className": ""
    },
    {
        "id": "bd2027dddef41de4",
        "type": "ui_group",
        "name": "p l/r group",
        "tab": "c74ca39032f59d25",
        "order": 1,
        "disp": true,
        "width": "6",
        "collapse": false,
        "className": ""
    },
    {
        "id": "61150425cb319fef",
        "type": "ui_group",
        "name": "Group 1",
        "tab": "e0b3a0cd5f8f3298",
        "order": 1,
        "disp": true,
        "width": 6
    },
    {
        "id": "91da677bce3bf414",
        "type": "ui_tab",
        "name": "Pharmacist load meds",
        "icon": "dashboard",
        "order": 2,
        "disabled": false,
        "hidden": false
    },
    {
        "id": "9be72af31adee06c",
        "type": "tls-config",
        "name": "",
        "cert": "",
        "key": "",
        "ca": "",
        "certname": "",
        "keyname": "",
        "caname": "isrgrootx1.pem",
        "servername": "",
        "verifyservercert": true,
        "alpnprotocol": ""
    },
    {
        "id": "57b8334d92a7b6b7",
        "type": "ui_tab",
        "name": "Pharmacist main menu",
        "icon": "dashboard",
        "order": 1,
        "disabled": false,
        "hidden": false
    },
    {
        "id": "c74ca39032f59d25",
        "type": "ui_tab",
        "name": "Pharmacist load or retrieve?",
        "icon": "dashboard",
        "order": 3,
        "disabled": false,
        "hidden": false
    },
    {
        "id": "e0b3a0cd5f8f3298",
        "type": "ui_tab",
        "name": "Pharmacist loaded meds confirmation",
        "icon": "dashboard",
        "order": 6,
        "disabled": false,
        "hidden": false
    }
]
